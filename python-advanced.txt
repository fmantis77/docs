- virtualenv					-- create python virtual env
	-> virtualenv flask
	-> cd flask
		-> source bin/activate


- mkdir app
	- create file __init__.py

- in main : import app	-> will import content of app dir

- flask example :
app/view.py 
------------
from app import app

@app.route('/')
@app.route('/index')
def index():
    return "Hello, World!"

app/__init__.py
---------------
from flask import Flask

app = Flask(__name__)
from app import views

run.py
------
#!flask/bin/python
from app import app

app.run(debug=True)		--- will call app __INIT__

./run.py
in browse : localhost:5000
or in telnet localhost 5000:
GET / HTTP/1.1

https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world

##########################
Flask restfull API
##########################
http://localhost:5000/todo/api/v1.0/tasks

#!flask/bin/python
from flask import Flask, jsonify

app = Flask(__name__)

tasks = [
    {
        'id': 1,
        'title': u'Buy groceries',
        'description': u'Milk, Cheese, Pizza, Fruit, Tylenol',
        'done': False
    },
    {
        'id': 2,
        'title': u'Learn Python',
        'description': u'Need to find a good Python tutorial on the web',
        'done': False
    }
]

@app.route('/todo/api/v1.0/tasks', methods=['GET'])	-- define REST access point
def get_tasks():
    return jsonify({'tasks': tasks})

if __name__ == '__main__':
    app.run(debug=True)

################################
Restfull with param
################################
http://localhost:5000/todo/api/v1.0/tasks/2

@app.route('/todo/api/v1.0/tasks/<int:task_id>', methods=['GET'])
def get_task(task_id):
    task = [task for task in tasks if task['id'] == task_id]
    if len(task) == 0:
        abort(404)
    return jsonify({'task': task[0]})

-- See implementation of POST method
@app.route('/todo/api/v1.0/tasks', methods=['POST'])
def create_task():
    if not request.json or not 'title' in request.json:
        abort(400)
    task = {
        'id': tasks[-1]['id'] + 1,
        'title': request.json['title'],
        'description': request.json.get('description', ""),
        'done': False
    }
    tasks.append(task)
    return jsonify({'task': task}), 201

-- Cannot be passed in URL
-> html page or python or curl
curl -i -H "Content-Type: application/json" -X POST -d '{"title":"Read a book"}' http://localhost:5






